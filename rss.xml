<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title><![CDATA[jonnor]]></title>
        <description><![CDATA[jonnor]]></description>
        <link>https://thegrid.ai/jonnor/</link>
        <generator>The Grid</generator>
        <lastBuildDate>Sat, 13 Feb 2016 18:13:21 GMT</lastBuildDate>
        <atom:link href="https://thegrid.ai/jonnor/rss.xml" rel="self" type="application/rss+xml"/>
        <item>
            <title><![CDATA[Jon Nordby]]></title>
            <description><![CDATA[<article><h1>Jon Nordby</h1><p>While learning Qt here at Openismus I've written a basic, working plug-in for Qt that adds support for the OpenRaster file format*. Here is my Qt-based test application demoing this functionality by showing some awesome multi-layered abstract test art made by yours truly using Krita:</p></article>]]></description>
            <link>https://thegrid.ai/jonnor/jon-nordby/index.html</link>
            <guid isPermaLink="false">beed308e-fa83-491c-828b-26697ba7be95</guid>
            <pubDate>Sat, 13 Feb 2016 18:11:53 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Jon Nordby]]></title>
            <description><![CDATA[<article><h1>Jon Nordby</h1><p>Where as all my physical machines run Arch Linux, I do have some virtualized servers running Ubuntu. And in general, it is the GNU/Linux distro I recommend to people new to Linux. Not only because it has most of the things you need in a decent package and a balance between free and proprietary that I like, but also because it has a large and welcoming community. It is one of the most popular distros, and this makes it easy for people to find help when they need it. So, being the curious geek that I am, I had to check out nearest release party for Ubuntu 9.10 (Karmic Koala).</p></article>]]></description>
            <link>https://thegrid.ai/jonnor/jon-nordby/index.html</link>
            <guid isPermaLink="false">988ce81a-5170-447f-9008-dd23d8a0d3c3</guid>
            <pubDate>Sat, 13 Feb 2016 18:11:53 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Jon Nordby]]></title>
            <description><![CDATA[<article><h1>Jon Nordby</h1><p>Maliit (also known as Meego Input Methods) has the following overall goal: "to be the input method project for MeeGo and other GNU/Linux-based embedded/mobile platforms".</p></article>]]></description>
            <link>https://thegrid.ai/jonnor/jon-nordby/index.html</link>
            <guid isPermaLink="false">f6dcbcc5-5787-4c72-9e4a-097cf805bf0d</guid>
            <pubDate>Sat, 13 Feb 2016 18:11:52 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Jon Nordby]]></title>
            <description><![CDATA[<article><h1>Jon Nordby</h1><h2>Implementation</h2><p>In learning Qt, I of course needed to get some experience with the newest and shiniest bits of Qt: Qt Quick.</p></article>]]></description>
            <link>https://thegrid.ai/jonnor/jon-nordby/index.html</link>
            <guid isPermaLink="false">d5b2405c-4472-4a60-bd79-62fbbe81256a</guid>
            <pubDate>Sat, 13 Feb 2016 18:11:52 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Jon Nordby]]></title>
            <description><![CDATA[<article><h1>Jon Nordby</h1><p>MyPaint popularity is continuing to grow, much thanks to publicity from the Durian Open Movie project. We're now working on the v0.8 release, which hopefully will be out this year.  I wrote a small post on the official site about that here.  I'm responsible for the translations, and so far we have 11 of them, with a couple more in the works that I know of.  Packaging is also picking up, soon most of the major GNU/Linux distros will have MyPaint in the official repos! Even some talk about a Mac OSX version (using X11.app tho).</p></article>]]></description>
            <link>https://thegrid.ai/jonnor/jon-nordby/index.html</link>
            <guid isPermaLink="false">f439d51a-a3c9-44c5-a270-2736e447927d</guid>
            <pubDate>Sat, 13 Feb 2016 18:11:52 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Jon Nordby]]></title>
            <description><![CDATA[<article><h1>Jon Nordby</h1><p>GTK+ application support for Maliit input methods has existed for a long time, but up until now it has lived in separate repositories. This has been inconvenient for users and for developers, and was the major cause for it to not be on the same level as the Qt support. This has changed as the GTK+ support has now been merged into the maliit-framework repository, and along side the Qt support. Maliit 0.80.8, which was released yesterday, contains these changes.</p></article>]]></description>
            <link>https://thegrid.ai/jonnor/jon-nordby/index.html</link>
            <guid isPermaLink="false">9efa4647-bbc3-4d6e-b6c2-0ce0949b7bf7</guid>
            <pubDate>Sat, 13 Feb 2016 18:11:52 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Jon Nordby]]></title>
            <description><![CDATA[<article><h1>Jon Nordby</h1><p>Glom is an application that lets you design database systems, including user interface. It can be run as an ordinary application, and will set up and run a the database server for you automatically. But if you want to set up a shared instance, where several users connect with Glom to the same database, you typically want your database server on a dedicated server. And this can be a bit tricky to set up. So, glom-postgresql-setup was born; A dead-simple utility application to set up a PostgreSQL server for use with Glom. Like Glom, it is written in C++ using Gtkmm.</p></article>]]></description>
            <link>https://thegrid.ai/jonnor/jon-nordby/index.html</link>
            <guid isPermaLink="false">3b682ba0-b5a5-4fba-928f-a91a3e56f901</guid>
            <pubDate>Sat, 13 Feb 2016 18:11:52 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Jon Nordby]]></title>
            <description><![CDATA[<article><h1>Jon Nordby</h1><p>In Maliit input methods are implemented as plugins. This flexibility is important because it allows the same framework to provide very different text input methods, without us having to implement them all. Different virtual keyboards, hardware keyboard input, handwriting, speech-to-text, input methods for accessibility, et.c. are all possible with the Maliit framework. This makes the input method plugin API the most important extension point.</p></article>]]></description>
            <link>https://thegrid.ai/jonnor/jon-nordby/index.html</link>
            <guid isPermaLink="false">b4d9408d-dd5f-4cc8-9729-c12a84263e5e</guid>
            <pubDate>Sat, 13 Feb 2016 18:11:52 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Jon Nordby]]></title>
            <description><![CDATA[<article><h1>Jon Nordby</h1><p>Another day, another release. This release fixes:</p></article>]]></description>
            <link>https://thegrid.ai/jonnor/jon-nordby/index.html</link>
            <guid isPermaLink="false">76a255b0-ddea-4299-ac41-4f9986a8e5ec</guid>
            <pubDate>Sat, 13 Feb 2016 18:11:52 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Jon Nordby]]></title>
            <description><![CDATA[<article><h1>Jon Nordby</h1><p>*if your favorite distro is Fedora, Ubuntu, Arch or Gentoo.</p></article>]]></description>
            <link>https://thegrid.ai/jonnor/jon-nordby/index.html</link>
            <guid isPermaLink="false">df61cb4f-20d7-42eb-aab2-fc9397d88532</guid>
            <pubDate>Sat, 13 Feb 2016 18:11:51 GMT</pubDate>
        </item>
    </channel>
</rss>